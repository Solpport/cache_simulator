Simulating a cache with 8 total lines; each line has 2 words
Each set in the cache contains 8 lines; there are 1 sets
memory[0]=0x810006
memory[1]=0x820007
memory[2]=0x830008
memory[3]=0x840009
memory[4]=0x850006
memory[5]=0x1800000
memory[6]=0x64
memory[7]=0xc8
memory[8]=0x12c
memory[9]=0x190

$$$ transferring word [0-1] from the memory to the cache
$$$ transferring word [0-0] from the cache to the processor
$$$ transferring word [6-7] from the memory to the cache
$$$ transferring word [6-6] from the cache to the processor
$$$ transferring word [1-1] from the cache to the processor
$$$ transferring word [7-7] from the cache to the processor
$$$ transferring word [2-3] from the memory to the cache
$$$ transferring word [2-2] from the cache to the processor
$$$ transferring word [8-9] from the memory to the cache
$$$ transferring word [8-8] from the cache to the processor
$$$ transferring word [3-3] from the cache to the processor
$$$ transferring word [9-9] from the cache to the processor
$$$ transferring word [4-5] from the memory to the cache
$$$ transferring word [4-4] from the cache to the processor
$$$ transferring word [6-6] from the cache to the processor
$$$ transferring word [5-5] from the cache to the processor
machine halted
total of 6 instructions executed
final state of machine:

@@@
state:
	pc 6
	memory:
		mem[ 0 ] 0x00810006
		mem[ 1 ] 0x00820007
		mem[ 2 ] 0x00830008
		mem[ 3 ] 0x00840009
		mem[ 4 ] 0x00850006
		mem[ 5 ] 0x01800000
		mem[ 6 ] 0x00000064
		mem[ 7 ] 0x000000C8
		mem[ 8 ] 0x0000012C
		mem[ 9 ] 0x00000190
	registers:
		reg[ 0 ] 0
		reg[ 1 ] 100
		reg[ 2 ] 200
		reg[ 3 ] 300
		reg[ 4 ] 400
		reg[ 5 ] 100
		reg[ 6 ] 0
		reg[ 7 ] 0
end state
$$$ Main memory words accessed: 10
